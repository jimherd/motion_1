$date
	Fri Sep 14 22:03:38 2018
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	100ps
$end

$scope module motion_system $end
$var wire 1 ! CLOCK_50 $end
$var wire 1 " reset $end
$var wire 1 # quadrature_A [3] $end
$var wire 1 $ quadrature_A [2] $end
$var wire 1 % quadrature_A [1] $end
$var wire 1 & quadrature_A [0] $end
$var wire 1 ' quadrature_B [3] $end
$var wire 1 ( quadrature_B [2] $end
$var wire 1 ) quadrature_B [1] $end
$var wire 1 * quadrature_B [0] $end
$var wire 1 + quadrature_I [3] $end
$var wire 1 , quadrature_I [2] $end
$var wire 1 - quadrature_I [1] $end
$var wire 1 . quadrature_I [0] $end
$var wire 1 / uP_start $end
$var wire 1 0 uP_handshake_1 $end
$var reg 1 1 uP_ack $end
$var reg 1 2 uP_handshake_2 $end
$var wire 1 3 uP_data_out [7] $end
$var wire 1 4 uP_data_out [6] $end
$var wire 1 5 uP_data_out [5] $end
$var wire 1 6 uP_data_out [4] $end
$var wire 1 7 uP_data_out [3] $end
$var wire 1 8 uP_data_out [2] $end
$var wire 1 9 uP_data_out [1] $end
$var wire 1 : uP_data_out [0] $end
$var reg 8 ; uP_data_in [7:0] $end
$var reg 4 < pwm_out [3:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
01
02
bx ;
bx00 <
z!
z"
z&
z%
z$
z#
z*
z)
z(
z'
z.
z-
z,
z+
z/
z0
z:
z9
z8
z7
z6
z5
z4
z3
$end
